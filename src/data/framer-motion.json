{
      "Inicializar proyecto": [
        "üü¢ Instalar Framer Motion en tu proyecto React:",
        "1. Aseg√∫rate de tener un proyecto de React creado (por ejemplo, con Vite o Create React App).",
        "2. Instala Framer Motion ejecutando el siguiente comando en la ra√≠z del proyecto:",
        "```bash\nnpm install framer-motion\n```",
        "   - Si usas Yarn, usa:",
        "```bash\nyarn add framer-motion\n```",
        "3. Verifica la instalaci√≥n importando `motion` en un componente React.",
        "   - Ejemplo:",
        "```javascript\nimport { motion } from 'framer-motion';\n```"
      ],
      "Instalar librer√≠as": [
        "‚úÖ Framer Motion es la librer√≠a principal para animaciones.",
        "1. Para usar animaciones b√°sicas en React, solo necesitas instalar `framer-motion`.",
        "   - Para React (ya cubierto en la secci√≥n anterior).",
        "2. Si deseas utilizar otros complementos, como `framer-motion` para Vue o `framer-motion` para otros entornos, consulta su [documentaci√≥n oficial](https://www.framer.com/motion/)."
      ],
      "Estructura b√°sica": [
        "1. motion.div, motion.section, motion.article, etc.: Estos componentes se usan para envolver elementos HTML est√°ndar y habilitar animaciones.",
        "   - Ejemplo de un componente con animaci√≥n:",
        "```javascript\nimport { motion } from 'framer-motion';\n\nconst Example = () => (\n  <motion.div animate={{ x: 100 }} initial={{ x: 0 }} transition={{ duration: 1 }}>\n    ¬°Hola, mundo!\n  </motion.div>\n);\n```",
        "2. Variants: Un objeto donde defines animaciones predefinidas para usar en varios elementos.",
        "   - Ejemplo de `variants`:",
        "```javascript\nconst boxVariants = {\n  hidden: { opacity: 0 },\n  visible: { opacity: 1, transition: { duration: 2 } }\n};\n\n<motion.div variants={boxVariants} initial='hidden' animate='visible'>\n  ¬°Animaci√≥n con variantes!\n</motion.div>\n```",
        "3. Animation types:",
        "- `animate`: Define la animaci√≥n que el componente debe ejecutar.",
        "- `initial`: Estado inicial de la animaci√≥n.",
        "- `exit`: Estado final de la animaci√≥n (√∫til para animaciones de salida).",
        "- `transition`: Controla la duraci√≥n, el retraso y la curva de la animaci√≥n."
      ],
      "Comandos √∫tiles": [
        "`motion.div` - Componente principal para animar elementos `div`.",
        "`motion.section` - Componente principal para animar elementos `section`.",
        "`motion.article` - Componente principal para animar elementos `article`.",
        "`motion.button` - Componente principal para animar botones.",
        "`motion.svg` - Componente para animar gr√°ficos SVG.",
        "`motion.path` - Componente para animar rutas SVG (ideal para animaciones de l√≠nea).",
        "`motion.img` - Componente para animar im√°genes (ideal para transiciones de imagen)."
      ],
      "Tips & extras": [
        "‚úÖ Gesti√≥n de animaciones complejas: Usa `variants` para animaciones reutilizables y m√°s f√°ciles de gestionar.",
        "‚úÖ Animaciones en el scroll: Usa `useAnimation` y `motion.div` con `scroll` para activar animaciones mientras el usuario desplaza la p√°gina.",
        "‚úÖ Gesti√≥n de interacciones: Usa `drag` y `whileHover` para agregar interacciones de arrastre y hover a tus componentes.",
        "‚úÖ Animaciones condicionales: Utiliza `animate` y `initial` en combinaci√≥n con estados para activar animaciones seg√∫n la l√≥gica de tu aplicaci√≥n.",
        "‚úÖ Optimizaci√≥n de rendimiento: Usa `layout` para animar elementos cuando se redibujan y `exit` para crear transiciones de salida en elementos que se eliminan del DOM.",
        "‚úÖ Framer Motion con React Router: Usa `motion.div` y `motion.section` para animar transiciones entre diferentes rutas de tu aplicaci√≥n con React Router."
      ]
  }