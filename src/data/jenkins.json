{
      "Inicializar proyecto": [
        "üü¢ Instalar Jenkins de forma local:",
        "1. Descarga Jenkins desde https://www.jenkins.io/download/.",
        "2. Para sistemas basados en Debian/Ubuntu, usa los siguientes comandos:",
        "```bash\nsudo apt update\nsudo apt install openjdk-11-jdk\nwget -q -O - https://pkg.jenkins.io/jenkins.io.key | sudo apt-key add -\nsudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable/ all main > /etc/apt/sources.list.d/jenkins.list'\nsudo apt update\nsudo apt install jenkins\n```",
        "3. Inicia Jenkins:",
        "```bash\nsudo systemctl start jenkins\n```",
        "4. Accede a Jenkins en tu navegador: http://localhost:8080",
        "üü° Iniciar Jenkins en Docker:",
        "```bash\ndocker pull jenkins/jenkins:lts\ndocker run -p 8080:8080 jenkins/jenkins:lts\n```",
        "5. Abre Jenkins en http://localhost:8080 y sigue las instrucciones para desbloquear."
      ],
      "Instalar librer√≠as": [
        "‚ùå Jenkins no tiene librer√≠as externas como otras tecnolog√≠as, pero es importante instalar los plugins necesarios.",
        "1. Accede a Jenkins y dir√≠gete a Manage Jenkins > Manage Plugins.",
        "2. En la pesta√±a Available, busca e instala los plugins que necesites (por ejemplo, Git, Docker, Maven)."
      ],
      "Estructura b√°sica": [
        "- Jenkinsfile: Archivo que define el flujo de trabajo de Jenkins (pipeline).",
        "```groovy\npipeline {\n    agent any\n    stages {\n        stage('Build') {\n            steps {\n                echo 'Building...'\n            }\n        }\n        stage('Test') {\n            steps {\n                echo 'Testing...'\n            }\n        }\n    }\n}\n```",
        "- Freestyle Projects: Tareas m√°s simples sin el uso de Jenkinsfile.",
        "- Pipelines: Proyectos m√°s complejos que utilizan Jenkinsfile.",
        "- Node (Agentes): M√°quina donde Jenkins ejecuta las tareas."
      ],
      "Comandos √∫tiles": [
        "`jenkins start` - Inicia Jenkins (si est√° configurado como servicio).",
        "`jenkins stop` - Detiene Jenkins (si est√° configurado como servicio).",
        "`docker run jenkins/jenkins:lts` - Ejecuta Jenkins en un contenedor Docker.",
        "`java -jar jenkins.war` - Inicia Jenkins localmente (si no se instal√≥ como servicio)."
      ],
      "Tips & extras": [
        "‚úÖ Usa Jenkinsfile para versionar tu pipeline junto con el c√≥digo fuente.",
        "‚úÖ Instala plugins como Docker Pipeline, GitHub y Pipeline para mejorar la integraci√≥n.",
        "‚úÖ Configura Jenkins en Docker para evitar dependencias complicadas.",
        "‚úÖ Considera usar Jenkins Blue Ocean para una interfaz m√°s moderna y amigable.",
        "‚úÖ Usa Declarative Pipelines para una sintaxis m√°s estructurada y f√°cil de mantener.",
        "‚úÖ Configura la seguridad de Jenkins adecuadamente, especialmente en entornos de producci√≥n."
      ]
  }